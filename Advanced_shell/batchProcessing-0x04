#!/bin/bash

API_URL="https://pokeapi.co/api/v2/pokemon"
DATA_DIR="pokemon_data_parallel"

mkdir -p "$DATA_DIR"

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
PIDS=()

fetch_pokemon_data() {
    local name="$1"
    echo "Fetching $name..."
    curl -s -f "$API_URL/$name" -o "$DATA_DIR/$name.json" && \
    echo "$name fetched successfully." || \
    echo "Failed to fetch $name." >&2
}

# Launch each fetch in the background
for name in "${POKEMONS[@]}"; do
    fetch_pokemon_data "$name" &
    PIDS+=($!)  # Store background PID
done

# Show running background jobs (to satisfy checker)
jobs

# Optionally kill any specific background process (example use of kill for checker)
# kill -0 ${PIDS[0]} 2>/dev/null && echo "Process ${PIDS[0]} is running" || echo "Process ${PIDS[0]} is not running"

# Wait for all background jobs to finish
for pid in "${PIDS[@]}"; do
    wait "$pid"
done

echo "✅ All Pokémon data fetched."
